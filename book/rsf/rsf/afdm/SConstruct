from rsf.proj import *

# Testing finite-difference acoustic wave modeling in different languages

prog = {}

for lang in ('c','c++','f90','python','julia','chapel'):
    if lang != 'julia' or WhereIs('julia'):   
        SConscript('../../../../api/%s/test/SConstruct' % lang)
        prog[lang] = '../../../../api/%s/test/afdm.exe' % lang

# Create wavelet
Flow('wavelet',None,'spike n1=1001 k1=200 d1=0.001 | ricker1 frequency=10')
Result('wavelet','graph title=Wavelet')

# Create velocity
Flow('velocity',None,
     '''
    math n1=501 n2=501 d1=0.01 d2=0.01 label1=Z label2=X
    unit1=km unit2=km output="1+0.2*x1+0.1*x2"
    ''')
Result('velocity','grey title="Velocity" scalebar=y color=j mean=y screenratio=1')

# Place sources
Flow('refl','velocity',
     'spike nsp=3 k1=100,200,300 k2=100,300,200 mag=1,-1,2')

for lang in prog.keys():
    wave = 'wave'+lang

    Flow(wave,['wavelet',prog[lang],'velocity','refl'],
        '${SOURCES[1]} vel=${SOURCES[2]} ref=${SOURCES[3]} verb=n')
    
    # Wave movie
    Plot(wave,
     'window f3=100 j3=10 | grey gainpanel=all screenratio=1 title=Wave',view=1)

    # Wave snapshot
    Result(wave,
           '''
           window f3=-1 n3=1 |
           grey gainpanel=all screenratio=1 title="Wave (%s)"
           ''' % lang.capitalize())

# C:      4.53 user 1.17 sys (5.7)
# F90:    7.68 user 0.93 sys (8.61)
# C++:   11.87 user 0.92 sys (12.79)
# Python: 9.26 user 3.70 sys (12.96)

End()
