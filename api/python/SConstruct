import sys, os, string, re
sys.path.append('../../framework')
import bldutil

modules = Split('m8r vplot las')

try: # distribution version
    Import('env root libdir incdir pkgdir bindir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../../plot/lib/SConstruct')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'])

if root:
    env.Install(incdir,'Makefile')
    
    pydir = os.path.dirname(pkgdir)
    try:
        EnsurePythonVersion(2,4)
        for module in modules:
            env.RSF_Pycompile(module+'.pyc',module+'.py')
            install = env.Install(pydir,[module+'.py',module+'.pyc'])

            if module == 'm8r':
                env.InstallAs(os.path.join(pkgdir,'api.py'),module+'.py')
                env.InstallAs(os.path.join(pkgdir,'api.pyc'),module+'.pyc')
                env.Install(bindir,module+'test')
    except:
        pass

modules.remove('las')

if env.get('SWIG') and env.get('NUMPY'):
    #    try:
    #        EnsureSConsVersion(1,0)
    #    except:
    #        print "\n\n\tPlease upgrade SCons to version >= 1.0\n\n"
    #        Exit(1)

    # Python includes for SWIG
    pythinc = []
    try:
        import numpy
        numpy_loc = os.path.split(numpy.__file__)[0]
        pythinc.append(os.path.join(numpy_loc,'numarray','numpy'))
        if int(numpy.__version__.split(".")[0]) >=2:
            pythinc.append(os.path.join(numpy_loc,'_core','include'))
        else:
            pythinc.append(os.path.join(numpy_loc,'core','include'))
    except:
        print("\n\n\tPlease install numpy\n\n")
        Exit(1)

    import distutils.sysconfig
    pythinc.append(distutils.sysconfig.get_python_inc())

    env.Append(CPPPATH=pythinc)

    if env['PLATFORM'] == 'cygwin':
        python = 'python%s' % sys.version[:3]
        env.Prepend(LIBPATH=['/usr/lib/%s/config' % python],
                    LIBS = ['librsfplot','librsf',python])
        ldmsuffix = '.dll' 
    else:
        env.Replace(LIBS=['drsfplot','drsf'])
        ldmsuffix = '.so'

    for module in modules:
        wrap = env.CFile(module,module+'.i',SWIGFLAGS='-python')
        env.Depends(wrap,'numpy.i')

        if env['PLATFORM'] == 'cygwin':
            python = env.SharedLibrary(module,wrap[0],
                                       SHLIBPREFIX='_c_',
                                       SHLIBSUFFIX=ldmsuffix)
        else:
            python = env.LoadableModule(module,wrap[0],
                                        LDMODULEPREFIX='_c_',
                                        LDMODULESUFFIX=ldmsuffix,
                                        FRAMEWORKSFLAGS='-flat_namespace '
                                        '-undefined dynamic_lookup')

        pfiles = [python,wrap[1],module+'.py']
        env.Install('../../lib',pfiles)

        if root:
            pydir = os.path.dirname(pkgdir)
            install = env.Install(pydir,pfiles[:2])

            if env['PLATFORM'] == 'darwin':
                for lib in ('rsf','rsfplot'):
                    env.AddPostAction(install,
                    '%s -change build/%s/libd%s.dylib '
                    '%s/libd%s.dylib %s' % \
                    (WhereIs('install_name_tool'),
                    {'rsf':'api/c','rsfplot':'plot/lib'}[lib],
                        lib,libdir,lib,install[0]))
