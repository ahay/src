import sys, os

try:
    import bldutil
    RSFSRC = '../..' # cwd is RSFSRC/build/user/jennings
    Import('env root bindir pkgdir')
    env = env.Clone()
except:
    RSFSRC = os.environ.get('RSFSRC', '../..')
    sys.path.append(os.path.join(RSFSRC,'framework'))
    import bldutil
    env = bldutil.Debug() # Debugging flags for compilers
    root = None
    SConscript(os.path.join(RSFSRC,'system/seismic/SConstruct'))

progs = '''
karlpocs lintshape2d tahagc tahfilter tahgain tahgethw tahheadermath tahmakeevent tahmakeskey tahmute tahnmo tahpef tahread tahremoveclick tahscdecon tahscscale tahsort tahstack tahstatic tahwindow tahwrite
''' 

env.Prepend(CPPPATH=[RSFSRC+'/include'],
            LIBPATH=[RSFSRC+'/lib'],
            LIBS=[env.get('DYNLIB','')+'rsfsegy',
                  env.get('DYNLIB','')+'su',
                  env.get('DYNLIB','')+'rsf'])
# fftw settings
fftw = env.get('FFTW')
if fftw:
    env.Prepend(CPPDEFINES=['SF_HAS_FFTW'])

src = Glob('[a-z]*.c')

for source in Split(src):
    inc = env.RSF_Include(source,prefix='')
    obj = env.StaticObject(source)
    env.Ignore(inc,inc)
    env.Depends(obj,inc)

mains = Split(progs)
for prog in mains:
    sources = ['M' + prog]
    bldutil.depends(env,sources,'M'+prog)
    env.StaticObject('M'+prog+'.c')
    if not fftw and prog in Split('karlistinterp karlpocs'):
        prog = env.RSF_Place('sf'+prog,None,var='FFTW',package='fftw-devel')
    else:
        prog = env.Program(prog,[x + '.o' for x in sources])
    if root:
        env.Install(bindir,prog)

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    user = os.path.basename(os.getcwd())
    main = 'sf%s.py' % user
    
    docs = [env.Doc(prog,'M' + prog) for prog in mains]
    env.Depends(docs,'#/framework/rsf/doc.py')	

    doc = env.RSF_Docmerge(main,docs)
    env.Install(pkgdir,doc)
