import os, sys, re, string
sys.path.append('../../framework')
import bldutil

progs = '''
apef apef2 apefsignoi atm1 atm2 bilstack c1coh convert0eq difference
doeps domf dominantf donf dowmf duffing duffing1 duffing2 duwt dwt2
dwt97 epsf fagrad fbpick findrefmax1 findwellcoord findzeroendt
fkoclet fkoclet3 fourbreg2 fourmis2 freqreg freshape fxspfdenoise2
fxspfint2 fxyspf fxyspfdenoise3 fxyspfint3 geoconvert gravcon groll
hv2d judgechaos initial instattr instsnr intbin4 internalmult invqfilt
iq2eq kuwahara lcf lcfseq lcfsiq lineslope localsnr locorr lpad2 lpf2
lpfdenoise1 lpfdenoise2 lrmf ltft lum lum2 lumsmoother lumsharpener
matchoper mean mf mig2 miss4 miss43 mkcmp mlm modatten1 modtraceq mtm
mtres mlwm multiple mvo mvo1 ndecon nmradon nmult nonloc nshape oclet
oshift1 pick31 pseudoprim pwcsemb pwd2 pwsfault pwsfault3 pwsmooth3
radonoper recoverfulleq reversval rtft saltpepper sclet seisavf
seisbreg2 seishrink seismis2 seispocs seisreg2 seisxwell sharpsimi
sltft snr spefcstep spefvstep sphase st stft sv2d svd svddenoise swell
testapef testcasoper testmatch theoreqiq threshold2 threshold3 tslread
tvmf txrna txrna2 txrna3 txspf txspfint2 txspfvsint2 txsorth
txyspfint3 txyspfvsint3 v2d variogram variogram2 vconvert virtualdata
wavemis2 winscan wmf zcwt
'''

try:  # distributed version
    Import('env root pkgdir bindir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../pwd/SConstruct')

src = Glob('[a-z]*.c')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=[env.get('DYNLIB','')+'rsfpwd',
                  env.get('DYNLIB','')+'rsf'])

for source in src:
    inc = env.RSF_Include(source,prefix='')
    obj = env.StaticObject(source)
    env.Ignore(inc,inc)
    env.Depends(obj,inc)

mains = Split(progs)
for prog in mains:
    sources = ['M' + prog]
    bldutil.depends(env,sources,'M'+prog)
    prog = env.Program(prog,[x + '.c' for x in sources])
    if root:
        env.Install(bindir,prog)

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    user = os.path.basename(os.getcwd())
    main = 'sf%s.py' % user
    
    docs = [env.Doc(prog,'M' + prog) for prog in mains]
    env.Depends(docs,'#/framework/rsf/doc.py')	
    doc = env.RSF_Docmerge(main,docs)
    env.Install(pkgdir,doc)

